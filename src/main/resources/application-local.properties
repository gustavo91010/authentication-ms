spring.config.import=optional:file:.env.properties
server.port=${PORTS}

spring.datasource.url=${DATA_SOURCE}
spring.datasource.username=${DATA_SOURCE_USERNAME}
spring.datasource.password=${DATA_SOURCE_PASSWORD}

# senha do usuairo padrão: ajudaqui

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update

# App Properties
bezkoder.app.jwtSecret= ajudaqui-ms
bezkoder.app.jwtExpirationMs= 86400000

# Trabalha jundo com o handle exception na exceção:NoHandlerFoundException
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Configuração para buscar dados no Config-Server-API
# spring.application.name=authentication-ms
# spring.cloud.config.uri=http://localhost:8888
# spring.profiles.active=default

# Configuração aws
aws.profile=${AWS_PROFILE}
aws.region=${AWS_REGION}
aws.id=${AWS_ID}
# aws.fila=${AWS_FILA}

logging.level.org.springframework.boot.context.properties=DEBUG
aws.fila.bill-manager=lalala
aws.fila.gestor360=lelele
aws.fila.names=bill-manager-register-a5979793-2ccd-4adf-b1f8-276e104eb954,gestor360-98362493765,auth-193846273161

# as.fila.bill-manager=${AWS_FILA_BILL_MANAGER}
# aws.fila.gestor360=${AWS_FILA_GESTOR360}

